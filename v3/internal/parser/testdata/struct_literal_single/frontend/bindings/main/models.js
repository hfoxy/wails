// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

export class $anon1 {
    /**
     * Creates a new $anon1 instance.
     * @param {Partial<$anon1>} [source = {}] - The source object to create the $anon1.
     */
    constructor(source = {}) {
        if (!("Age" in source)) {
            /**
             * @member
             * @type {number}
             */
            this["Age"] = 0;
        }
        if (!("Address" in source)) {
            /**
             * @member
             * @type {$anon2}
             */
            this["Address"] = (new $anon2());
        }

        Object.assign(this, source);
    }

    /**
     * Creates a new $anon1 instance from a string or object.
     * @param {string|object} source - The source data to create a $anon1 instance from.
     * @returns {$anon1} A new $anon1 instance.
     */
    static createFrom(source) {
        let parsedSource = typeof source === 'string' ? JSON.parse(source) : source;
        return new $anon1(parsedSource);
    }
};

export class $anon2 {
    /**
     * Creates a new $anon2 instance.
     * @param {Partial<$anon2>} [source = {}] - The source object to create the $anon2.
     */
    constructor(source = {}) {
        if (!("Street" in source)) {
            /**
             * @member
             * @type {string}
             */
            this["Street"] = "";
        }

        Object.assign(this, source);
    }

    /**
     * Creates a new $anon2 instance from a string or object.
     * @param {string|object} source - The source data to create a $anon2 instance from.
     * @returns {$anon2} A new $anon2 instance.
     */
    static createFrom(source) {
        let parsedSource = typeof source === 'string' ? JSON.parse(source) : source;
        return new $anon2(parsedSource);
    }
};

export class Person {
    /**
     * Creates a new Person instance.
     * @param {Partial<Person>} [source = {}] - The source object to create the Person.
     */
    constructor(source = {}) {
        if (!("Name" in source)) {
            /**
             * @member
             * @type {string}
             */
            this["Name"] = "";
        }
        if (!("Parent" in source)) {
            /**
             * @member
             * @type {Person | null}
             */
            this["Parent"] = null;
        }
        if (!("Details" in source)) {
            /**
             * @member
             * @type {$anon1}
             */
            this["Details"] = (new $anon1());
        }

        Object.assign(this, source);
    }

    /**
     * Creates a new Person instance from a string or object.
     * @param {string|object} source - The source data to create a Person instance from.
     * @returns {Person} A new Person instance.
     */
    static createFrom(source) {
        let parsedSource = typeof source === 'string' ? JSON.parse(source) : source;
        return new Person(parsedSource);
    }
};
